AWSTemplateFormatVersion: 2010-09-09
Description: First tempate to demonstrate Lambda function using Cloudformation
Metadata: 

Parameters: 

Mappings: 

Conditions: 

Resources:
  StateMachineScheduler:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      DefinitionString: !Sub |
        {
          "Comment": "AWS Step Functions Example",
          "StartAt": "scheduling",
          "States": {
          "scheduling": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-west-2:078794018778:function:v1_job_scheduler",
            "InputPath": "$",
            "OutputPath": "$",
            "ResultPath": "$",
            "TimeoutSeconds": 60,
            "Next": "push workload into pcluster",
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.Unknown",
                  "Lambda.ServiceException",
                  "Lambda.TooManyRequestsException",
                  "ProvisionedThroughputExceededException",
                  "States.DataLimitExceeded"
                ],
                "IntervalSeconds": 10,
                "MaxAttempts": 10,
                "BackoffRate": 3
              }
            ]
          },
          "push workload into pcluster": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-west-2:078794018778:function:v1_push_workload",
            "InputPath": "$",
            "OutputPath": "$",
            "ResultPath": "$",
            "TimeoutSeconds": 60,
            "Next": "give permissions",
              "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.Unknown",
                  "Lambda.TooManyRequestsException",
                  "States.DataLimitExceeded"
                ],
                "IntervalSeconds": 10,
                "MaxAttempts": 10,
                "BackoffRate": 3
              }
              ]
          },
          "give permissions": 
          {
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-west-2:078794018778:function:v1_workload_permission",
            "InputPath": "$",
            "OutputPath": "$",
            "ResultPath": "$",
            "TimeoutSeconds": 60,
            "Next": "start workload launcher script ",
            "Retry": [
            {
              "ErrorEquals": [
                "Lambda.Unknown",
                "Lambda.TooManyRequestsException",
                "States.DataLimitExceeded"
              ],
              "IntervalSeconds": 10,
              "MaxAttempts": 10,
              "BackoffRate": 3
            }
            ]
          },
          "start workload launcher script ": 
          {
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-west-2:078794018778:function:v1_workload_launcher",
            "InputPath": "$",
            "OutputPath": "$",
            "ResultPath": "$",
            "TimeoutSeconds": 60,
            "End": true,
            "Retry": [
            {
              "ErrorEquals": [
                "Lambda.Unknown",
                "Lambda.TooManyRequestsException",
                "States.DataLimitExceeded"
              ],
              "IntervalSeconds": 10,
              "MaxAttempts": 10,
              "BackoffRate": 3
            }
            ]
          }
        }
  LambdaFunctionJobScheduler:
    Type: AWS::Lambda::Function
    Properties:
      Description: This Lambda function is responsible for scheduling of Jobs
      FunctionName: 
      Handler: lambda_function.lambda_handler
      KmsKeyArn: 
      MemorySize: 128
      Role: role-arn
      Runtime: nodejs | nodejs4.3 | nodejs6.10 | nodejs8.10 | java8 | python2.7 | python3.6 | dotnetcore1.0 | dotnetcore2.0 | dotnetcore2.1 | nodejs4.3-edge | go1.x
      Timeout: 
      VpcConfig:
        SecurityGroupIds:
          - sg-id
        SubnetIds:
          - subnet-id
      Environment:
        Variables:
          key1: value1 # A map of key-value pairs that the Lambda function can access
      Code:
        S3Bucket: 
        S3Key: 
        S3ObjectVersion: 
        ZipFile: 
      Tags:
        - Key: keyname
          Value: value
Outputs: